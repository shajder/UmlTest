name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    # - name: Setup Ninja
    #   uses: seanmiddleditch/gha-setup-ninja@master
    - name: Set up CMake
      uses: jwlawson/actions-setup-cmake@v1
      with:
        cmake-version: '3.20.0'

    # - name: Setup MSVC with Ninja
    #   uses: ilammy/msvc-dev-cmd@v1

    - name: Fetch OpenCL Headers
      shell: bash
      run: |
        git clone https://github.com/KhronosGroup/OpenCL-Headers.git
        cd OpenCL-Headers
        ln -s CL OpenCL
        cd ..

      
    - name: Install dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y ocl-icd-opencl-dev
        sudo apt-get install -y build-essential

    - name: Install Intel CPU Runtime for OpenCL (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        choco install intel-opencl --yes || echo "Intel OpenCL runtime not available via Chocolatey, attempting to install manually."
        
        if (-Not (Test-Path "C:\Program Files (x86)\Intel\OpenCL SDK"  )) {
            Write-Host "Downloading Intel OpenCL Runtime installer."
            Invoke-WebRequest -Uri "https://example.com/path/to/IntelOpenCLRuntime.exe" -OutFile "IntelOpenCLRuntime.exe"
            Start-Process -FilePath "IntelOpenCLRuntime.exe" -ArgumentList "/S" -Wait
        }

    - name: Configure CMake
      run: cmake -S . -B build

    - name: Build
      run: cmake --build build

    - name: Run tests
      run: ctest --test-dir build

  # formatcheck:
  #   name: Check code format
  #   runs-on: ubuntu-22.04
  #   steps:
  #     - name: Install packages
  #       run: sudo apt install -y clang-format clang-format-14
  #     - uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0
  #     - name: Check code format
  #       run: ./check-format.sh      
