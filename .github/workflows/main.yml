name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up CMake
      uses: jwlawson/actions-setup-cmake@v1
      with:
        cmake-version: '3.20.0'

    - name: Install dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y ocl-icd-opencl-dev
        sudo apt-get install -y build-essential
        sudo apt-get install -y cmake ninja-build
        
    - name: Install Intel CPU Runtime for OpenCL (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        # UÅ¼yj Chocolatey do zainstalowania Intel OpenCL Runtime
        choco install opencl-intel-cpu-runtime --yes
        # vcpkg.exe --triplet=x64-windows install opencl

    - name: Print contents of a directory
      run: |
        # Replace 'C:\path\to\your\directory' with the actual directory path
        Get-ChildItem 'C:\ProgramData\chocolatey\lib' | ForEach-Object { Write-Host $_.FullName }
        
    - name: Configure Windows
      if: matrix.os == 'windows-latest'
      shell: cmd
      run: |
        call "C:/Program Files/Microsoft Visual Studio/2022/Enterprise/VC/Auxiliary/Build/vcvarsall.bat" x64
        choco install ninja

    # - name: Check if file exists (Windows)
    #   if: matrix.os == 'windows-latest'
    #   run: |
    #     if (Test-Path "C:\Program Files (x86)\Common Files\Intel\Shared Libraries\opencl\bin\x64\OpenCL.dll") {
    #         Write-Host "File 1 exists."
    #     }
    #     if (Test-Path "C:\Program Files (x86)\Common Files\Intel\Shared Libraries\opencl\bin\OpenCL.dll") {
    #         Write-Host "File 2 exists."
    #     }
    #     if (Test-Path "C:\Program Files (x86)\Common Files\Intel\Shared Libraries\opencl\lib\x64\OpenCL.lib") {
    #         Write-Host "File 3 exists."
    #     }
            

    # - name: Set up OpenCL environment variables (Windows)
    #   if: matrix.os == 'windows-latest'
    #   run: |
    #     $env:INCLUDE += ";C:\Program Files (x86)\Common Files\Intel\Shared Libraries\opencl\include"
    #     $env:LIB += ";C:\Program Files (x86)\Common Files\Intel\Shared Libraries\opencl\lib\x64"
    #     $env:Path += ";C:\Program Files (x86)\Common Files\Intel\Shared Libraries\opencl\bin\x64"



    
    # - name: Configure CMake
    #   run: cmake -G Ninja -S . -B build
      
    # - name: Build
    #   run: cmake --build build




    # - name: Run tests
    #   run: ctest --test-dir build

  # formatcheck:
  #   name: Check code format
  #   runs-on: ubuntu-22.04
  #   steps:
  #     - name: Install packages
  #       run: sudo apt install -y clang-format clang-format-14
  #     - uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0
  #     - name: Check code format
  #       run: ./check-format.sh      
